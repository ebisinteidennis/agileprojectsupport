workflows:
  android-workflow:
    name: Android Build
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      vars:
        # Java and Gradle optimization
        JAVA_TOOL_OPTIONS: "-Xmx4g -XX:+UseG1GC"
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true"
        GRADLE_USER_HOME: $CM_BUILD_DIR/.gradle
        # Flutter optimization
        PUB_CACHE: $HOME/.pub-cache
      flutter: stable
      java: 17
      android_signing:
        - keystore_reference
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $CM_BUILD_DIR/.gradle/wrapper
        - $CM_BUILD_DIR/.gradle/caches
        - $HOME/.pub-cache
    scripts:
      - name: Set up environment
        script: |
          echo "Flutter version:"
          flutter --version
          echo "Java version:"
          java -version
          echo "Android SDK version:"
          $ANDROID_SDK_ROOT/tools/bin/sdkmanager --list_installed
          
      - name: Clean and prepare
        script: |
          cd flutter_app
          # Clean previous builds
          flutter clean
          
          # Remove lock file to prevent conflicts
          rm -f pubspec.lock
          
          # Clear pub cache if needed
          flutter pub cache repair || true
          
      - name: Get dependencies
        script: |
          cd flutter_app
          # Get dependencies with verbose output
          flutter pub get --verbose
          
          # Generate code if needed (for json_serializable)
          flutter packages pub run build_runner build --delete-conflicting-outputs || true
          
      - name: Analyze code
        script: |
          cd flutter_app
          # Run static analysis (continue on warnings)
          flutter analyze || true
          
      - name: Update Android configuration
        script: |
          cd flutter_app
          # Ensure the build.gradle has the correct SDK versions
          echo "Updating Android configuration..."
          
          # Check if build.gradle already has the correct compileSdk
          if ! grep -q "compileSdk 36" android/app/build.gradle; then
            sed -i.bak 's/compileSdk [0-9]*/compileSdk 36/g' android/app/build.gradle
          fi
          
          # Check if build.gradle has the correct NDK version
          if ! grep -q 'ndkVersion "26.1.10909125"' android/app/build.gradle; then
            sed -i.bak 's/ndkVersion "[^"]*"/ndkVersion "26.1.10909125"/g' android/app/build.gradle
          fi
          
          echo "Android configuration updated"
          
      - name: Install Android SDK components
        script: |
          # Install required Android SDK components
          echo "Installing Android SDK components..."
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platforms;android-36" "build-tools;34.0.0" "ndk;26.1.10909125" || true
          echo "Android SDK components installation completed"
          
      - name: Build APK (Debug)
        script: |
          cd flutter_app
          echo "Building debug APK..."
          flutter build apk --debug --build-number=$PROJECT_BUILD_NUMBER --build-name=1.0.$PROJECT_BUILD_NUMBER
          echo "Debug APK build completed"
          
      - name: Build APK (Release)
        script: |
          cd flutter_app
          echo "Building release APK..."
          flutter build apk --release --build-number=$PROJECT_BUILD_NUMBER --build-name=1.0.$PROJECT_BUILD_NUMBER
          echo "Release APK build completed"
          
      - name: Build AAB (Release)
        script: |
          cd flutter_app
          echo "Building Android App Bundle..."
          flutter build appbundle --release --build-number=$PROJECT_BUILD_NUMBER --build-name=1.0.$PROJECT_BUILD_NUMBER
          echo "Android App Bundle build completed"

    artifacts:
      - flutter_app/build/app/outputs/flutter-apk/*.apk
      - flutter_app/build/app/outputs/bundle/release/*.aab
      - flutter_app/build/app/outputs/mapping/release/mapping.txt

    publishing:
      email:
        recipients:
          - your-email@example.com
        notify:
          success: true
          failure: true

  # Alternative workflow for faster testing (APK only)
  android-debug:
    name: Android Debug Build (Fast)
    instance_type: mac_mini_m2
    max_build_duration: 60
    environment:
      vars:
        JAVA_TOOL_OPTIONS: "-Xmx3g"
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3g -Dorg.gradle.daemon=true"
        PUB_CACHE: $HOME/.pub-cache
      flutter: stable
      java: 17
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'develop'
          include: true
          source: true
        - pattern: 'feature/*'
          include: true
          source: true
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $CM_BUILD_DIR/.gradle/wrapper
        - $CM_BUILD_DIR/.gradle/caches
    scripts:
      - name: Setup and build debug
        script: |
          cd flutter_app
          echo "Setting up Flutter project..."
          flutter clean
          flutter pub get --verbose
          
          echo "Updating Android configuration..."
          sed -i.bak 's/compileSdk [0-9]*/compileSdk 36/g' android/app/build.gradle || true
          sed -i.bak 's/ndkVersion "[^"]*"/ndkVersion "26.1.10909125"/g' android/app/build.gradle || true
          
          echo "Building debug APK..."
          flutter build apk --debug --build-number=$PROJECT_BUILD_NUMBER
          echo "Debug build completed"

    artifacts:
      - flutter_app/build/app/outputs/flutter-apk/*.apk

  # iOS workflow (if needed later)
  ios-workflow:
    name: iOS Build
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      vars:
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
        - pattern: 'release/*'
          include: true
          source: true
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/Library/Caches/CocoaPods
    scripts:
      - name: Set up environment
        script: |
          cd flutter_app
          flutter clean
          flutter pub get
          find . -name "Podfile" -execdir pod install \;
          
      - name: Build iOS
        script: |
          cd flutter_app
          flutter build ipa --release --build-number=$PROJECT_BUILD_NUMBER --build-name=1.0.$PROJECT_BUILD_NUMBER

    artifacts:
      - flutter_app/build/ios/ipa/*.ipa
      - flutter_app/build/ios/archive/Runner.xcarchive/**/*